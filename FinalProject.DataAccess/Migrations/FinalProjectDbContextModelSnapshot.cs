// <auto-generated />
using System;
using FinalProject.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.DataAccess.Migrations
{
    [DbContext(typeof(FinalProjectDbContext))]
    partial class FinalProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<double>("Cost")
                        .HasColumnType("float")
                        .HasColumnName("cost");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc22db03-3488-48d3-a849-425facc29396"),
                            Description = "Description",
                            Name = "apple",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("90621c13-9308-44ee-8265-cee9dc141453"),
                            Description = "Description",
                            Name = "banana",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("0b61892c-0057-43af-924f-56d4eba30f12"),
                            Description = "Description",
                            Name = "grape",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("dc6bc6e6-c90b-4f56-b8b8-e062eed60b4c"),
                            Description = "Description",
                            Name = "bread",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        });
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<double>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password_hash");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07d80dac-5c06-41d7-bdcb-c56b23eac492"),
                            Balance = 1000.0,
                            Email = "Test@email.com",
                            FirstName = "Name",
                            LastName = "LastName",
                            PasswordHash = "12345678"
                        });
                });

            modelBuilder.Entity("OrderDetailMap", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_ID");

                    b.Property<Guid>("OrderDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_detail_ID");

                    b.HasKey("OrderId", "OrderDetailId");

                    b.HasIndex(new[] { "OrderDetailId" }, "IX_order_detail_map_order_detail_ID");

                    b.ToTable("order_detail_map", (string)null);
                });

            modelBuilder.Entity("OrderOrderDetail", b =>
                {
                    b.Property<Guid>("OrderDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderDetailId", "OrderId");

                    b.ToTable("OrderOrderDetail");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Order", b =>
                {
                    b.HasOne("FinalProject.Core.Models.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_order_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("FinalProject.Core.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_order_detail_product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderDetailMap", b =>
                {
                    b.HasOne("FinalProject.Core.Models.Entities.OrderDetail", null)
                        .WithMany()
                        .HasForeignKey("OrderDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_order_detail_map_order_detail");

                    b.HasOne("FinalProject.Core.Models.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_order_detail_map_order");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
