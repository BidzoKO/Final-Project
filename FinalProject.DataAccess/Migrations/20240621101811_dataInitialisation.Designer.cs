// <auto-generated />
using System;
using FinalProject.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.DataAccess.Migrations
{
    [DbContext(typeof(FinalProjectDbContext))]
    [Migration("20240621101811_dataInitialisation")]
    partial class dataInitialisation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<double>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_ID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<double>("Cost")
                        .HasColumnType("float")
                        .HasColumnName("cost");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.ToTable("order_detail");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8b41a08-1332-40c6-9beb-98ada66047e7"),
                            Description = "Description",
                            Name = "apple",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("774215df-1256-4e02-bbbe-b8ebda5b1b2c"),
                            Description = "Description",
                            Name = "banana",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("f1af378a-e041-41b9-b99f-fd973dd9ce1d"),
                            Description = "Description",
                            Name = "grape",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("01f3c978-782c-433a-b92c-fcface3a8334"),
                            Description = "Description",
                            Name = "bread",
                            Price = 5.5,
                            Quantity = 100,
                            Status = 0
                        });
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<double>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password_hash");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = new Guid("26e27792-2b87-4538-a012-bfcc043864e3"),
                            Balance = 1000.0,
                            Email = "Test@email.com",
                            FirstName = "Name",
                            LastName = "LastName",
                            PasswordHash = "12345678"
                        });
                });

            modelBuilder.Entity("OrderDetailMap", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_ID");

                    b.Property<Guid>("OrderDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_detail_ID");

                    b.HasKey("OrderId", "OrderDetailId")
                        .HasName("PK_order-details");

                    b.HasIndex("OrderDetailId");

                    b.ToTable("order_detail_map", (string)null);
                });

            modelBuilder.Entity("OrderOrderDetail", b =>
                {
                    b.Property<Guid>("OrderDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderDetailId", "OrderId");

                    b.ToTable("OrderOrderDetail");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.Order", b =>
                {
                    b.HasOne("FinalProject.Core.Models.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_order_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderDetailMap", b =>
                {
                    b.HasOne("FinalProject.Core.Models.Entities.OrderDetail", null)
                        .WithMany()
                        .HasForeignKey("OrderDetailId")
                        .IsRequired()
                        .HasConstraintName("FK_order-details_order_detail");

                    b.HasOne("FinalProject.Core.Models.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_order-details_order");
                });

            modelBuilder.Entity("FinalProject.Core.Models.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
